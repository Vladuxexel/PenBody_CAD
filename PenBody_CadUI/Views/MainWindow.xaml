<Window x:Class="PenBody_CadUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PenBody_CadUI"
        xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
        mc:Ignorable="d"
        xmlns:calc="clr-namespace:CalcBinding;assembly=CalcBinding"
        Icon="pack://application:,,,/Views/Pen.ico"
        ResizeMode="NoResize"
        Title="Корпус пишущей ручки" Height="350" Width="330" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <local:MainWindowVM/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary Source="CadStyles.xaml"/>
    </Window.Resources>
    <DockPanel Background="#c4c4c4">
        <TextBlock DockPanel.Dock="Top" Text="Параметры построения" Style="{StaticResource Header}"/>
        <StatusBar DockPanel.Dock="Bottom" Height="20">
            <fa:ImageAwesome Icon="CheckCircle" Foreground="{Binding OkIconColor}"/>
            <fa:ImageAwesome Icon="Warning" Foreground="{Binding WarningIconColor}"/>
            <TextBlock Text="{Binding Message}" Style="{StaticResource MsgText}"/>
            <ProgressBar Visibility="{calc:Binding IsLoading, FalseToVisibility=Hidden}"/>
        </StatusBar>
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.3*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1" CornerRadius="5">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.45*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Длина основной части (мм):"/>
                    <TextBox Grid.Column="1" Grid.Row="0" MaxLength="7" IsEnabled="{calc:Binding !IsLoading}"
                             Text="{Binding PenBodyParametersListVM.MainLength,
                                    UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Длина части для резинки (мм):"/>
                    <TextBox Grid.Column="1" Grid.Row="1" MaxLength="7" IsEnabled="{calc:Binding !IsLoading}"
                             Text="{Binding PenBodyParametersListVM.RubberLength,
                                    UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Диаметр (мм):"/>
                    <TextBox Grid.Column="1" Grid.Row="2" MaxLength="7" IsEnabled="{calc:Binding !IsLoading}"
                             Text="{Binding PenBodyParametersListVM.MainDiameter, 
                                    UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Внутренний диаметр (мм):"/>
                    <TextBox Grid.Column="1" Grid.Row="3" MaxLength="7" IsEnabled="{calc:Binding !IsLoading}"
                             Text="{Binding PenBodyParametersListVM.InnerDiameter, 
                                    UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Диаметр части для резинки (мм):"/>
                    <TextBox Grid.Column="1" Grid.Row="4" MaxLength="7" IsEnabled="{calc:Binding !IsLoading}"
                             Text="{Binding PenBodyParametersListVM.RubberDiameter,
                                    UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                </Grid>
            </Border>
            <Button Grid.Row="1" Content="Сбросить" HorizontalAlignment="Left"
                    IsEnabled="{calc:Binding !IsLoading}" Command="{Binding ResetCommand}"/>
            <Button Grid.Row="1" Content="Построить" HorizontalAlignment="Right"
                    IsEnabled="{calc:Binding !IsLoading}" Command="{Binding BuildCommand}"/>
        </Grid>
    </DockPanel>
</Window>
